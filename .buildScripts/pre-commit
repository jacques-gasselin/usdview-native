#!/bin/sh

echo 'Running formatters ..............................................'

# Ensure C++ code is formatted.
git ls-files | grep -v "deps\/" | grep "hpp\|cpp" | xargs clang-format -i
if git diff --exit-code > /dev/null &> .buildScripts/.formatErrors.txt
then
    printf ''
else
    echo "C++ code has _not_ been formatted, see errors in .buildScripts/.formatErrors.txt, exiting commit process"
    exit 1
fi

git ls-files | grep -v "deps\/" | grep "\.swift" | xargs -I{} sh -c 'swiftformat "$1" > /dev/null' -- {} 
if git diff --exit-code > /dev/null &> .buildScripts/.formatErrors.txt
then
    printf ""
else
    echo "Swift code has _not_ been formatted, see errors in .buildScripts/.formatErrors.txt, exiting commit process"
    exit 1
fi

echo 'Running linters .................................................'
if swiftlint lint --path macos/usdview > /dev/null &> .buildScripts/.lintErrors.txt
then
    printf ""
else
    echo "Swift code has _not_ been linted, see errors in .buildScripts/.lintErrors.txt, exiting commit process"
    exit 1
fi

echo 'Running build ...................................................'
if .buildScripts/build > /dev/null &> .buildScripts/.buildErrors.txt
then
    printf ""
else
    echo "Build failed! See error log in buildErrors.txt"
fi

# Ensure the tests pass
echo 'Running tests ...................................................'
if .buildScripts/test > /dev/null &> .buildScripts/.testErrors.txt
then
    echo ""
else
    echo "Tests failed! See error log in .buildScripts/.testErrors.txt"
fi

echo 'Cleaning up artifacts ...........................................'
if [ -e .buildScripts/.buildErrors.txt ]; then
    rm .buildScripts/.buildErrors.txt 
fi

if [ -e .buildScripts/.testErrors.txt ]; then
    rm .buildScripts/.testErrors.txt 
fi

if [ -e .buildScripts/.formatErrors.txt ]; then
    rm .buildScripts/.formatErrors.txt
fi

if [ -e .buildScripts/.lintErrors.txt ]; then
    rm .buildScripts/.lintErrors.txt
fi
